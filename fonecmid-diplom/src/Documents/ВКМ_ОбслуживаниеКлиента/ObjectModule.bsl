#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий


Процедура ОбработкаПроведения(Отказ, Режим)

ДействующийДоговор = ПроверкаДоговора();
Если Не ДействующийДоговор Тогда
	Отказ = Истина;
КонецЕсли;

	// регистр ВКМ_ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ФактическиПотраченоЧасов КАК ФактическиПотраченоЧасов,
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту КАК ЧасыКОплатеКлиенту
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = &Ссылка
		|	И НЕ ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Договора = Договор;
		Движение.Клиент = Клиент;
		Движение.КоличествоЧасов = Выборка.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * Выборка.СтоимостьЧасаРаботы ;
	КонецЦикла;
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записать();
КонецПроцедуры

Процедура ПриЗаписи()
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	//ТекстИзменений = "Тестовый текст изменения";
	//Справочники.ВКМ_УведомленияТелеграмБоту.з
	//Справочники.ВКМ_УведомленияТелеграмБоту.ЗаполнитьСообщениеДляОтправки(ТекстИзменений);
КонецПроцедуры


#КонецОбласти
#Область СлужебныеПроцедурыИФункции

Функция ПроверкаДоговора()
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Договор.Ссылка
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
		|	И ВКМ_ОбслуживаниеКлиента.Дата
		|		МЕЖДУ ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_ДатаНачалаДействияДоговора И ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_ДатаОкончанияДействияДоговора
		|	И
		|		ВКМ_ОбслуживаниеКлиента.Договор.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
			Возврат Истина;
	Иначе Сообщить("Отсутсвует действующий договор на абонентское обслуживание!");
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
#КонецОбласти

#КонецЕсли

